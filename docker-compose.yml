services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rest-api-practical-test-app
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      XDEBUG_MODE: 'off'
      XDEBUG_CONFIG: 'client_host=host.docker.internal'
    volumes:
      - .:/var/www/html
    depends_on:
      - pgsql
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  pgsql:
    image: postgres:17
    container_name: pgsql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: rest-api-practical-test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - pgsql-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "rest-api-practical-test", "-U", "postgres"]
      retries: 3
      timeout: 5s

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - pgsql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgsql-data:
